plugins {
	id 'fabric-loom' version '0.2.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version

def versionPropsFile = file('version.properties')

if (versionPropsFile.canRead()) {
	def Properties versionProps = new Properties()

	versionProps.load(new FileInputStream(versionPropsFile))

	def major = versionProps['VERSION_MAJOR'].toInteger()
	def minor = versionProps['VERSION_MINOR'].toInteger()
	def build = versionProps['VERSION_BUILD'].toInteger()

	version = "${major}.${minor}.${build}"
}

minecraft {}

repositories {
	maven { url "https://maven.fabricmc.net/" }
	jcenter()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"

	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"	
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modCompile "io.github.prospector:modmenu:${project.modmenu_version}"
	modCompile "me.shedaniel.cloth:config-2:${project.cloth_version}"
	
	include "me.shedaniel.cloth:config-2:${project.cloth_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

compileJava {
	if (versionPropsFile.canRead()) {
		def Properties versionProps = new Properties()

		versionProps.load(new FileInputStream(versionPropsFile))

		def major = versionProps['VERSION_MAJOR'].toInteger()
		def minor = versionProps['VERSION_MINOR'].toInteger()
		def build = versionProps['VERSION_BUILD'].toInteger() + 1

		if (build > 99) {
			third += 1
			build = 1
			
			if (third > 99) {
				minor += 1
				third = 0
			}
		}
		
		versionProps['VERSION_MINOR'] = minor.toString()
		versionProps['VERSION_BUILD'] = build.toString()
		versionProps.store(versionPropsFile.newWriter(), null)

		version = "${major}.${minor}.${build}-${project.minecraft_version}"
	}
}

jar {
	from "LICENSE"
}
